{{ $root := dict
    "title" "Docs"
    "description" "Documentation for your favorite fox API"
-}}
{{- tpl ( file.Read "templates/start.html.tmpl" ) $root }}
    <h1 class="section">Docs</h1>
    <div class="fold-container">
        <section class="fold">
            <input type="checkbox" name="collapse" id="foldable-libraries">
            <h2>
                <label for="foldable-libraries">Libraries</label>
            </h2>
            <div class="fold-container">
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-c">
                    <h2>
                        <label for="foldable-libraries-c">C/C++</label>
                    </h2>
                    <div>
                        <p>
                            To add <code>foxes</code> to your project you
                            need to git clone or add as a submodule
                            <code>https://github.com/Foxes-cool/Foxes-C</code>.
                            At the top of your code you can add
                            <code>#include "./Foxes-C/foxes.h"</code> (this
                            could be different depending on where your
                            <code>.h</code> file is). To compile your program
                            you will need to add the
                            <code>./Foxes-C/foxes.c"</code> to your compling
                            and add <code>-lcurl</code> to the end of your
                            compile arguments. Example: 
                            <code>gcc -o my_program main.c ./Foxes-C/foxes.c -lcurl</code>.
                        </p>
                        <p>
                            To use <code>foxes</code> anywhere in your code you
                            can do <code>foxes_{tag}((foxes_options){})</code>,
                            example would be
                            <code>foxes_fox((foxes_options){})</code>, to see
                            all of the tags scroll down. This will return a URL
                            like <code>https://img.foxes.cool/fox/0.jpg</code>.
                            Do note that if you want to prevent memory leaks you
                            need to free the url that comes out of this
                            function.
                        </p>
                        <p>
                            To use the image manipulation you can add some
                            fields in your <code>foxes_options</code> struct, an
                            example is
                            <code>foxes_fox((foxes_options){.width = 150, .height = 150})</code>.
                            This will return a link like
                            <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>.width = 150</code></li>
                                <li><code>Height</code> -
                                <code>.height = 150</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>.aspectRatio = (char*) "1:2"</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-cli">
                    <h2>
                        <label for="foldable-libraries-cli">Cli (shell scripting)</label>
                    </h2>
                    <div>
                        <p>
                            To add the <code>foxes</code> cli program you need
                            to do run
                            <code>
                            git clone https://github.com/Foxes-cool/Foxes-Cli
                            cd Foxes-Cli
                            make
                            sudo make install
                            </code>
                        </p>
                        <p>
                            To use <code>foxes</code> in your shell scripts and
                            in the cli you can do <code>foxes {tag}</code>, an
                            example would be <code>foxes fox</code>. This will
                            return a URL like
                            <code>https://img.foxes.cool/fox/0.jpg</code>.
                        </p>
                        <p>
                            To use the image manipulation you can add some cli
                            fields, example is
                            <code>foxes -w 150 -h 150 fox</code>.
                            This will return a link like
                            <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>-w 150</code></li>
                                <li><code>Height</code> -
                                <code>-h 150</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>-r "1:2"</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-go">
                    <h2>
                        <label for="foldable-libraries-go">Go</label>
                    </h2>
                    <div>
                        <p>
                            To add <code>foxes</code> to your project you
                            need to do
                            <code>go get github.com/Foxes-cool/Foxes-Go</code>
                            and add
                            <code>import "github.com/Foxes-cool/Foxes-Go"</code>
                            to the top of your file.
                        </p>
                        <p>
                            To use <code>foxes</code> anywhere in your code you
                            can do <code>img, err := foxes.{tag}()</code>, an
                            example would be
                            <code>img, err := foxes.Fox()</code>, to see all
                            of the tags scroll down. This will return a URL like
                            <code>https://img.foxes.cool/fox/0.jpg</code>
                        </p>
                        <p>
                            To use the image manipulation you can add a function
                            after your main function call, an example is
                            <code>img, err := foxes.Fox(foxes.Options{Width: 150, Height: 150})</code>.
                            This will return a link like
                            <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>Width: 150</code></li>
                                <li><code>Height</code> -
                                <code>Height: 150</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>AspectRatio: "1:2"</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-web">
                    <h2>
                        <label for="foldable-libraries-web">JavaScript (Web)</label>
                    </h2>
                    <div>
                        <p>
                            To enable the API for the web is pretty simple. You
                            can either download <a
                            href="https://github.com/Foxes-cool/Foxes-Web/blob/main/dist/foxes.min.js">
                            https://github.com/Foxes-cool/Foxes-Web/blob/main/dist/foxes.min.js
                            </a>, or you can enable the API by adding this to
                            your header section
                            <br>
                            <code>
                            &lt;script src="https://cdn.jsdelivr.net/gh/Foxes-cool/Foxes-Web/dist/foxes.min.js"&gt;&lt;/script&gt;
                            </code>
                        </p>
                        <p>
                            Once you have enabled the library you will have
                            access to all of the tags without doing any of the
                            manual work. You can use them by for example doing
                            <code>foxes.fox()</code>, it will return something
                            like <code>https://img.foxes.cool/fox/0.jpg</code>.
                            The syntax is <code>foxes.{tag}()</code>, to find
                            the tags just scroll down and you will see them. Do
                            note that in the JavaScript library all the names
                            start with a lowercase.
                        </p>
                        <p>
                            You can have do some real time image manipulation by
                            adding an options as the first parameter to the
                            function. An example would be like
                            <code>foxes.fox({width: 150})</code>, this will
                            generate a random image that has a max width of
                            150px. You can string multiple of them by doing
                            <code>foxes.fox({width: 150, height: 150})</code>,
                            this will get a random image that has a max width
                            of 150px and max height of 150px. Note this will
                            preserve aspect ratio so it is very likely that
                            either width or height will be 150px but not both.
                        </p>
                        <p>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>width: 150</code></li>
                                <li><code>Height</code> -
                                <code>height: 150</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>aspect_ratio: "1:2"</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-javascript">
                    <h2>
                        <label for="foldable-libraries-javascript">Javascript/Typescript (Node.js, Deno, Bun, CoffeeScript)</label>
                    </h2>
                    <div class="fold-container">
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-bun">
                            <h2>
                                <label for="foldable-libraries-js-bun">Bun</label>
                            </h2>
                            <div>
                                To install the <code>foxes.cool</code> library
                                you just do <code>npm i foxes.cool</code>. Now
                                anywhere in your project you can do
                                <code>const foxes = require("foxes.cool");</code>.
                                To see how to use this look under the <b>Usage
                                </b> section.
                            </div>
                        </section>
                        <hr>
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-coffeescript">
                            <h2>
                                <label for="foldable-libraries-js-coffeescript">CoffeeScript</label>
                            </h2>
                            <div>
                                To install the <code>foxes.cool</code> library
                                you just do <code>npm i foxes.cool</code>. Now
                                anywhere in your project you can do
                                <code>foxes = require "foxes.cool";</code>.
                                To see how to use this look under the <b>Usage
                                </b> section. Do remember that you are
                                automatically placed in async so you don't need
                                to do the async function boiler plate. You also
                                need to remove all the <code>;</code>.
                            </div>
                        </section>
                        <hr>
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-deno">
                            <h2>
                                <label for="foldable-libraries-js-deno">Deno</label>
                            </h2>
                            <div>
                                To install the <code>foxes.cool</code> library
                                you just add
                                <code>import foxes from "https://deno.land/x/foxes@1.0.1/deno.ts";</code>
                                to the top of your file or use any other way you
                                want to import that library. To see how to use
                                this look under the <b>Usage</b> section.
                            </div>
                        </section>
                        <hr>
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-node">
                            <h2>
                                <label for="foldable-libraries-js-node">Node.js</label>
                            </h2>
                            <div>
                                To install the <code>foxes.cool</code> library
                                you just do <code>npm i foxes.cool</code>. Now
                                anywhere in your project you can do
                                <code>const foxes = require("foxes.cool");</code>.
                                To see how to use this look under the <b>Usage
                                </b> section.
                            </div>
                        </section>
                        <hr>
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-typescript">
                            <h2>
                                <label for="foldable-libraries-js-typescript">Typescript</label>
                            </h2>
                            <div>
                                To install the <code>foxes.cool</code> library
                                you just do <code>npm i foxes.cool</code>. Now
                                anywhere in your project you can do
                                <code>const foxes = require("foxes.cool");</code>.
                                To see how to use this look under the <b>Usage
                                </b> section.
                            </div>
                        </section>
                        <hr>
                        <section class="fold">
                            <input type="checkbox" name="collapse" id="foldable-libraries-js-usage">
                            <h2>
                                <label for="foldable-libraries-js-usage">Usage</label>
                            </h2>
                            <div>
                                <p>
                                    Once you have added your <code>foxes</code>
                                    variable you are able to request for all of the
                                    images through a simple API. The syntax for
                                    requesting an image is
                                    <code>await foxes.{tag}()</code>, an example is
                                    <code>await foxes.fox()</code>. To see all of
                                    the tags you can scroll down. Do note that all
                                    of the names start with a lowercase letter. This
                                    will return a URL like
                                    <code>https://img.foxes.cool/fox/0.jpg</code>.
                                </p>
                                <p>
                                    To use image manipulation, you are going to add
                                    an object as the first parameter. This will look
                                    like
                                    <code>await foxes.fox({width: 150, height: 150})</code>
                                    and this will return something like
                                    <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>.
                                    To see details about all of the arguments look
                                    inside the <b>Image Manipulation</b> section.
                                    This is how you set each of the parameters:
                                    <ul>
                                        <li><code>Width</code> -
                                        <code>width: 150</code></li>
                                        <li><code>Height</code> -
                                        <code>height: 150</code></li>
                                        <li><code>Aspect ratio</code> -
                                        <code>aspect_ratio: "1:2"</code></li>
                                    </ul>
                                    If you want to see an example in your
                                    respective language please look inside the
                                    <a
                                    href="https://github.com/Foxes-cool/Foxes-Javascript/tree/main/example"
                                    >Foxes-Javascript/example</a> folder in
                                    GitHub. Do note that the first line might
                                    be a little different than what was told of
                                    you to do in this document. Please do what
                                    this document says over what is in those
                                    files.
                                </p>
                            </div>
                        </section>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-python">
                    <h2>
                        <label for="foldable-libraries-python">Python</label>
                    </h2>
                    <div>
                        <p>
                            To add <code>foxes_cool</code> to your project you
                            just need to do <code>pip install foxes_cool</code>,
                            don't forget to add this to your
                            <code>requirements.txt</code> if you have one.
                        </p>
                        <p>
                            To use <code>foxes_cool</code>, add
                            <code>from foxes_cool import foxes</code> to your
                            files. Once you have done this to get an image you
                            can do <code>foxes.{tag}()</code>, an example would
                            be <code>foxes.fox()</code>, to see all of the tags
                            scroll down, do note that the names all start with
                            a lowercase letter. This will return a URL like
                            <code>https://img.foxes.cool/fox/0.jpg</code>
                        </p>
                        <p>
                            To use the image manipulation you can add an object
                            inside the <code>()</code>, an example is
                            <code>foxes.fox({"width": 150, "height": 150})</code>.
                            This will return a link like
                            <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>"width": 150</code></li>
                                <li><code>Height</code> -
                                <code>"height": 150</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>"aspect_ratio": "1:2"</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
                <hr>
                <section class="fold">
                    <input type="checkbox" name="collapse" id="foldable-libraries-rust">
                    <h2>
                        <label for="foldable-libraries-rust">Rust</label>
                    </h2>
                    <div>
                        <p>
                            To add <code>foxes</code> to your project you
                            just need to do <code>cargo add foxes</code>.
                        </p>
                        <p>
                            To use <code>foxes</code> anywhere in your code you
                            can do <code>foxes::{tag}()?</code>, an example would
                            be <code>foxes::fox()?</code>, to see all of the tags
                            scroll down, do note that the names all start with
                            a lowercase letter. This will return a URL like
                            <code>https://img.foxes.cool/fox/0.jpg</code>
                        </p>
                        <p>
                            To use the image manipulation you can add a function
                            after your main function call, an example is
                            <code>foxes::fox()?.width(150).height(150)</code>.
                            This will return a link like
                            <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                            For details about what each of the following do is
                            in the <b>Image Manipulation</b> section, here is
                            how each of the following would be set:
                            <ul>
                                <li><code>Width</code> -
                                <code>.width(150)</code></li>
                                <li><code>Height</code> -
                                <code>.height(150)</code></li>
                                <li><code>Aspect ratio</code> -
                                <code>.aspect_ratio(1,2)</code></li>
                            </ul>
                        </p>
                    </div>
                </section>
            </div>
        </section>
        <hr>
        <section class="fold">
            <input type="checkbox" name="collapse" id="foldable-manual">
            <h2>
                <label for="foldable-manual">Manual</label>
            </h2>
            <div>
                <p>
                    Foxes.cool, works a little differently than what you are
                    probably used to. You are probably used to having a rest
                    API where you make a request to an endpoint and it returns
                    a URL. This is both inefficient, but also demanding on the
                    servers. If you want to access a random image, you are
                    going to have to generate the image id yourself. This is
                    not as complicated as it seams though!
                </p>
                <p>
                    You are first going to want to know how many images there
                    are for a certain tag. This can be achieved by making a
                    request to <code>https://foxes.cool/counts/{}</code>,
                    replacing <code>{}</code>, with your tag. For instance
                    <code>https://foxes.cool/counts/fox</code> returns
                    <code>{{ tpl ( file.Read "src/counts/fox" ) }}</code>. This
                    number you can cache for any amount of time you want. I
                    would cache this number until midnight UTC. There are also
                    times where images are going to be removed because someone
                    has made a valid removal. If this happens we will try and
                    find a backup image to replace the id, so the images you
                    know will always be the same id. If we are going to loose
                    an image and don't find a backup we are going to update the
                    count as soon as we can, but we will remove our image ~5
                    minuets after UTC midnight to give you time to update to
                    the new count.
                </p>
                <p>
                    Now we have the fun part, actually generating the image
                    URLs. The simplest way to get an id is by doing this
                    calculation <code>floor(Random*count)</code> or
                    <code>floor(Random(0, count))</code>. For the first example
                    this is assuming <code>Random</code> is a random float
                    between 0 and 1. For the second example the
                    <code>Random</code> function is assumed to be an exclusive
                    random, meaning <code>count</code> wont ever be a
                    possibility. Once you have gotten the random id, to get the
                    image URL is pretty simple, you just do
                    <code>https://img.foxes.cool/{tag}/{id}.jpg</code>. In this
                    example <code>{}</code> is made to signify a variable. Do
                    note that your id needs to be calculated the way above and
                    you wont necessarily be able to transfer this id to another
                    tag. You will need to probably generate a new id for a
                    different tag.
                </p>
                <p>
                    There is support for real time image manipulation. These can
                    be controlled by URL parameters like <code>width</code> and
                    <code>height</code>. An example URL would be
                    <code>https://img.foxes.cool/fox/0.jpg?width=150&height=150</code>
                    , this would set the max width and height to be 150px. For
                    details about all of the things you can do please look in
                    the <b>Image Manipulation</b> section. This is how you use
                    each of them though:</p>
                    <ul>
                        <li><code>Width</code> - <code>width=150</code></li>
                        <li><code>Height</code> - <code>height=150</code></li>
                        <li><code>Aspect ratio</code> -
                        <code>aspect_ratio=1:2</code></li>
                    </ul>
            </div>
        </section>
        <hr>
        <section class="fold">
            <input type="checkbox" name="collapse" id="foldable-image">
            <h2>
                <label for="foldable-image">Image Manipulation</label>
            </h2>
            <div>
                <p>
                    <ul>
                        <li><code>Width</code> - This is the <b>max</b>
                        width for the image. This is always going to be a
                        number with the size in pixels.</li>
                        <li><code>Height</code> - This is the exact
                        same as width but for height.</li>
                        <li><code>Aspect ratio</code> - This will set
                        the aspect ratio. The value that is expected is
                        a string in the format of
                        <code>"{width}:{height}"</code>.
                        Do note that this does not stretch the
                        image and will crop the image to make it fit the
                        desired aspect ratio.</li>
                    </ul>
                </p>
            </div>
        </section>
    </div>
    <h2 class="section">Tags</h2>
    <div class="card-container">
        <div class="card">
            <h3 class="card-title">Fox</h3>
            <code>{{ tpl ( file.Read "src/counts/fox" ) }}</code> images
        </div>
        <div class="card">
            <h3 class="card-title">Curious</h3>
            <code>{{ tpl ( file.Read "src/counts/curious" ) }}</code> images
        </div>
        <div class="card">
            <h3 class="card-title">Happy</h3>
            <code>{{ tpl ( file.Read "src/counts/happy" ) }}</code> images
        </div>
        <div class="card">
            <h3 class="card-title">Scary</h3>
            <code>{{ tpl ( file.Read "src/counts/scary" ) }}</code> images
        </div>
        <div class="card">
            <h3 class="card-title">Sleeping</h3>
            <code>{{ tpl ( file.Read "src/counts/sleeping" ) }}</code> images
        </div>
    </div>
{{ file.Read "templates/end.html.tmpl" -}}
